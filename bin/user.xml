<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lizhiUser">
<!-- <mapper namespace="com.cn.dto.User"> -->

	<!-- 直接通过map或者javabean插入数据 -->
	<insert id="insert" parameterType="com.cn.dto.User">
		insert into
		userMybatis(user_id,user_name,password,status) values(
		#{userId},
		#{userName},
		#{password},
		#{status}
		)
	</insert>

	<!-- typeAliases>
		<typeAlias alias="Author" type="domain.blog.Author" />
		<typeAlias alias="Blog" type="domain.blog.Blog" />
		<typeAlias alias="Comment" type="domain.blog.Comment" />
		<typeAlias alias="Post" type="domain.blog.Post" />
		<typeAlias alias="Section" type="domain.blog.Section" />
		<typeAlias alias="Tag" type="domain.blog.Tag" />
	</typeAliases> -->

	<!--在这个配置中，您就可以在想要使用"domain.blog.Blog"的地方使用别名“Blog”了。
	对常用的java 类型，已经内置了一些别名支持。这些别名都是不区分大小写的。注意java
	的基本数据类型，它们进行了特别处理，加了“_”前缀。-->
			<!--	Alians     Type
			_byte      btye
			_long      long
			_short     short
			_int       int
			_integer   int
			_double    double
			_float     float
			_boolean   boolean
			string     String
			byte       Byte
			long       Long
			short      Short
			int				 Integer
			integer    Integer
			double     Double
			date			 Date
			decimimal  BigDecimal
			bigdecimal BigDecimal
			object     object
			map				 Map
			hashmap    HashMap
			list			 ListQ
			arraylist  ArrayList
			collection Collection
			iterator   Iterator-->

	<insert id="insertByAliases" parameterType="map">
		insert into
		userMybatis(user_id,user_name,password,status) values(
		#{userId},
		#{userName},
		#{password},
		#{status}
		)
	</insert>

	
	<!-- 更新 -->
	<update id="update" parameterType="com.cn.dto.User">
		update userMybatis
		<set>
			<if test="userName!=null">user_name=#{userName},</if>
			<if test="password!=null">password=#{password}</if>
		</set>
		<where>
			user_id = #{userId}
		</where>
	</update>

	<!-- 删除 -->
	<delete id="delete" parameterType="Map">
		delete from userMybatis
		<where>
			<if test="userName!=null">user_name=#{userName}</if>
		</where>
	</delete>
	<delete id="remove" parameterType="Map">
		delete from userMybatis where user_name=#{userName}
	</delete>
	<!-- 查询总数据条数 -->
	<select id="selectCount" parameterType="Map" resultType="int">
		select
		count(*) from userMybatis
	</select>

	<!-- 如果表字段和javaBean名称不一样，可以通过这样的映射来解决 -->
	<resultMap type="com.cn.dto.User" id="user">
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
		<result property="status" column="status" />
	</resultMap>
	<!-- 按条件查询 -->
	<select id="select" resultMap="user" parameterType="com.cn.dto.User">
		select * from userMybatis
		<include refid="selectOption" />
	</select>
	<!-- 
	<select id="select" resultType="user" parameterType="com.cn.dto.User">
		select 
			ut.user_id userId,
			ut.user_name userName,
			ut.password password,
			ut.status status
		form
		userMybatis ut
		<where>
			<if test="userId!=null">ut.user_id=#{userId}</if>
		</where>
	</select>
	 -->
	<!-- 多条件查询语句 -->
	<sql id="selectOption">
		<where>
			<if test="userId!=null">user_id=#{userId}</if>
		</where>
	</sql>

</mapper>